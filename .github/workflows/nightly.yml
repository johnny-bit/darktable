name: Nightly PKG

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  Win64:
    if: github.repository == 'darktable-org/darktable' || github.event_name == 'workflow_dispatch'
    name: Nightly darktable.${{ github.sha }}.win64
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: 
          - windows-latest
          - windows-2016
        btype: 
          - Release
        compiler: 
          - { compiler: LLVM,  CC: clang,   CXX: clang++ }
        eco: [-DBINARY_PACKAGE_BUILD=ON]
        target: [skiptest]
    defaults:
      run:
        shell: msys2 {0}
    env:
      CC: ${{ matrix.compiler.CC }}
      CXX: ${{ matrix.compiler.CXX }}
      SRC_DIR: ${{ github.workspace }}/src
      BUILD_DIR: ${{ github.workspace }}/build
      INSTALL_PREFIX: ${{ github.workspace }}/install
      ECO: ${{ matrix.eco }}
      CMAKE_BUILD_TYPE: ${{ matrix.btype }}
      GENERATOR: 'MSYS Makefiles'
      TARGET: ${{ matrix.target }}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            pacman-mirrors
            bash
            curl
            git
            base-devel
            intltool
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-clang
            mingw-w64-x86_64-openmp
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-cmocka
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-libxml2
            mingw-w64-x86_64-pugixml
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-exiv2
            mingw-w64-x86_64-lcms2
            mingw-w64-x86_64-lensfun
            mingw-w64-x86_64-dbus-glib
            mingw-w64-x86_64-openexr
            mingw-w64-x86_64-sqlite3
            mingw-w64-x86_64-libxslt
            mingw-w64-x86_64-libsoup
            mingw-w64-x86_64-libavif
            mingw-w64-x86_64-libwebp
            mingw-w64-x86_64-libsecret
            mingw-w64-x86_64-lua
            mingw-w64-x86_64-graphicsmagick
            mingw-w64-x86_64-openjpeg2
            mingw-w64-x86_64-gtk3
            mingw-w64-x86_64-pugixml
            mingw-w64-x86_64-libexif
            mingw-w64-x86_64-osm-gps-map
            mingw-w64-x86_64-libgphoto2
            mingw-w64-x86_64-drmingw
            mingw-w64-x86_64-gettext
            mingw-w64-x86_64-python3
            mingw-w64-x86_64-iso-codes
            mingw-w64-x86_64-python3-jsonschema
            mingw-w64-x86_64-python3-setuptools
            mingw-w64-x86_64-gmic
            mingw-w64-x86_64-nsis
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-curl
          update: true
      - uses: actions/checkout@v2
        with:
          submodules: true
          path: src
      - name: Update lensfun
        run: |
          lensfun-update-data
      - name: inspect mingw
        run: | 
          echo "${MINGW_PATH}""
      - name: instpect mingw-w64-x86_64-openssl
        run: |
          pacman -Ql mingw-w64-x86_64-openssl
      - name: Build and Install
        run: |
          cmake -E make_directory "${BUILD_DIR}"
          cmake -E make_directory "${INSTALL_PREFIX}"
          cd "${BUILD_DIR}"
          cmake -G "MSYS Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="${INSTALL_PREFIX}" -DBINARY_PACKAGE_BUILD=ON "${SRC_DIR}"
          cmake --build "${BUILD_DIR}"
          cmake --build "${BUILD_DIR}" --target install
      - name: Check if it runs
        run: |
          $(cygpath ${INSTALL_PREFIX})/bin/darktable.exe --version || true
          $(cygpath ${INSTALL_PREFIX})/bin/darktable-cli.exe \
                 --width 2048 --height 2048 \
                 --hq true --apply-custom-presets false \
                 $(cygpath ${SRC_DIR})/src/tests/integration/images/mire1.cr2 \
                 $(cygpath ${SRC_DIR})/src/tests/integration/0000-nop/nop.xmp \
                 output.png \
                 --core --disable-opencl --conf host_memory_limit=8192 \
                 --conf worker_threads=4 -t 4 \
                 --conf plugins/lighttable/export/force_lcms2=FALSE \
                 --conf plugins/lighttable/export/iccintent=0
      - name: Package
        if: ${{ success() && matrix.btype == 'Release' && matrix.target == 'skiptest' }}
        run: |
          cd "${BUILD_DIR}"
          cmake --build "${BUILD_DIR}" --target package
      - name: Package upload
        if: ${{ success() && matrix.btype == 'Release' && matrix.target == 'skiptest' }}
        uses: 'actions/upload-artifact@v2'
        with:
          name: darktable.${{ github.sha }}.win64.${{ matrix.os }}.zip
          path: ${{ env.BUILD_DIR }}/darktable-*.exe
          retention-days: 2
